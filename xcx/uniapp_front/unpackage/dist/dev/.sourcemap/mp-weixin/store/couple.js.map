{"version":3,"file":"couple.js","sources":["store/couple.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { themeApi } from '@/api/core';\r\nimport {\r\n    sendBindingRequest,\r\n    respondToBinding,\r\n    unbind,\r\n    getBindingInfo,\r\n    getPendingBindings,\r\n    getBindingHistory,\r\n    cancelBindingRequest\r\n} from '@/api/user';\r\nimport { useUserStore } from './user';\r\n\r\nexport const useCoupleStore = defineStore('couple', {\r\n    state: () => ({\r\n        // 绑定关系信息\r\n        bindingInfo: null,\r\n        // 自定义主题\r\n        theme: {\r\n            backgroundColor: '#FFFFFF',\r\n            primaryColor: '#007AFF',\r\n            backgroundImage: null\r\n        },\r\n        // 绑定请求状态\r\n        bindingRequestStatus: 'idle', // 'idle' | 'pending' | 'success' | 'error'\r\n        bindingRequestError: null,\r\n        // 待处理的绑定请求\r\n        pendingRequests: [],\r\n        // 绑定历史记录\r\n        bindingHistory: []\r\n    }),\r\n\r\n    getters: {\r\n        isBindingActive: state => {\r\n            if (!state.bindingInfo) return false;\r\n            return state.bindingInfo.status === 'active';\r\n        },\r\n        partnerId: state => {\r\n            if (!state.bindingInfo) return null;\r\n            const userStore = useUserStore();\r\n            const { requester, receiver } = state.bindingInfo;\r\n            return requester.id === userStore.userId ? receiver.id : requester.id;\r\n        },\r\n        partnerInfo: state => {\r\n            if (!state.bindingInfo) return null;\r\n            const userStore = useUserStore();\r\n            const { requester, receiver } = state.bindingInfo;\r\n            return requester.id === userStore.userId ? receiver : requester;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        // 设置绑定关系\r\n        setBindingInfo(info) {\r\n            this.bindingInfo = info;\r\n        },\r\n\r\n        // 设置主题\r\n        setTheme(theme) {\r\n            this.theme = {...this.theme, ...theme };\r\n        },\r\n\r\n        // 发送绑定请求\r\n        async sendBindingRequest(email, message = '') {\r\n            this.bindingRequestStatus = 'pending';\r\n            this.bindingRequestError = null;\r\n\r\n            try {\r\n                await sendBindingRequest(email, message);\r\n                this.bindingRequestStatus = 'success';\r\n                return true;\r\n            } catch (error) {\r\n                this.bindingRequestStatus = 'error';\r\n                this.bindingRequestError = error.message;\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        // 响应绑定请求\r\n        async respondToBinding(bindingId, action) {\r\n            try {\r\n                const response = await respondToBinding(bindingId, action);\r\n                if (action === 'accept') {\r\n                    this.bindingInfo = response;\r\n                }\r\n                return true;\r\n            } catch (error) {\r\n                uni.showToast({\r\n                    title: error.message || '操作失败',\r\n                    icon: 'none'\r\n                });\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 解除绑定\r\n        async unbind() {\r\n            if (!this.bindingInfo) return false;\r\n\r\n            try {\r\n                await unbind(this.bindingInfo.id);\r\n                this.bindingInfo = null;\r\n                return true;\r\n            } catch (error) {\r\n                uni.showToast({\r\n                    title: error.message || '解除绑定失败',\r\n                    icon: 'none'\r\n                });\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 加载主题设置\r\n        async loadTheme() {\r\n            try {\r\n                const response = await themeApi.get();\r\n                this.setTheme(response);\r\n                return true;\r\n            } catch (error) {\r\n                console.error('Failed to load theme:', error);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 更新主题设置\r\n        async updateTheme(themeData) {\r\n            try {\r\n                await themeApi.update(themeData);\r\n                this.setTheme(themeData);\r\n                return true;\r\n            } catch (error) {\r\n                uni.showToast({\r\n                    title: error.message || '更新主题失败',\r\n                    icon: 'none'\r\n                });\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 获取绑定信息\r\n        async fetchBindingInfo() {\r\n            try {\r\n                const response = await getBindingInfo();\r\n                this.bindingInfo = response;\r\n                return true;\r\n            } catch (error) {\r\n                console.error('获取绑定信息失败:', error);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 获取待处理请求\r\n        async fetchPendingRequests() {\r\n            try {\r\n                const response = await getPendingBindings();\r\n                this.pendingRequests = response;\r\n                return true;\r\n            } catch (error) {\r\n                console.error('获取待处理请求失败:', error);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 获取绑定历史\r\n        async fetchBindingHistory() {\r\n            try {\r\n                const response = await getBindingHistory();\r\n                this.bindingHistory = response;\r\n                return true;\r\n            } catch (error) {\r\n                console.error('获取绑定历史失败:', error);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // 接受绑定请求\r\n        async acceptBindingRequest(requestId) {\r\n            try {\r\n                const response = await respondToBinding(requestId, 'accept');\r\n                this.bindingInfo = response;\r\n                // 刷新待处理请求列表\r\n                await this.fetchPendingRequests();\r\n                return true;\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        // 拒绝绑定请求\r\n        async rejectBindingRequest(requestId) {\r\n            try {\r\n                await respondToBinding(requestId, 'reject');\r\n                // 刷新待处理请求列表\r\n                await this.fetchPendingRequests();\r\n                return true;\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        // 取消绑定请求\r\n        async cancelBindingRequest() {\r\n            try {\r\n                await cancelBindingRequest();\r\n                this.bindingInfo = null;\r\n                return true;\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n});"],"names":["defineStore","useUserStore","sendBindingRequest","respondToBinding","uni","unbind","themeApi","getBindingInfo","getPendingBindings","getBindingHistory","cancelBindingRequest"],"mappings":"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"}