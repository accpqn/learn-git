{"version":3,"file":"storage.js","sources":["utils/storage.js"],"sourcesContent":["/**\n * 本地存储工具类\n * 提供统一的数据持久化接口\n */\n\nclass Storage {\n    /**\n     * 设置存储数据\n     * @param {string} key 存储键\n     * @param {any} value 存储值\n     * @returns {boolean} 是否成功\n     */\n    static set(key, value) {\n        try {\n            const data = JSON.stringify(value);\n            uni.setStorageSync(key, data);\n            return true;\n        } catch (error) {\n            console.error(`Storage set error for key ${key}:`, error);\n            return false;\n        }\n    }\n\n    /**\n     * 获取存储数据\n     * @param {string} key 存储键\n     * @param {any} defaultValue 默认值\n     * @returns {any} 存储的数据或默认值\n     */\n    static get(key, defaultValue = null) {\n        try {\n            const data = uni.getStorageSync(key);\n            if (data) {\n                return JSON.parse(data);\n            }\n            return defaultValue;\n        } catch (error) {\n            console.error(`Storage get error for key ${key}:`, error);\n            return defaultValue;\n        }\n    }\n\n    /**\n     * 删除存储数据\n     * @param {string} key 存储键\n     * @returns {boolean} 是否成功\n     */\n    static remove(key) {\n        try {\n            uni.removeStorageSync(key);\n            return true;\n        } catch (error) {\n            console.error(`Storage remove error for key ${key}:`, error);\n            return false;\n        }\n    }\n\n    /**\n     * 清空所有存储数据\n     * @returns {boolean} 是否成功\n     */\n    static clear() {\n        try {\n            uni.clearStorageSync();\n            return true;\n        } catch (error) {\n            console.error('Storage clear error:', error);\n            return false;\n        }\n    }\n\n    /**\n     * 获取存储信息\n     * @returns {object} 存储信息\n     */\n    static getInfo() {\n        try {\n            return uni.getStorageInfoSync();\n        } catch (error) {\n            console.error('Storage getInfo error:', error);\n            return { keys: [], currentSize: 0, limitSize: 0 };\n        }\n    }\n\n    /**\n     * 检查键是否存在\n     * @param {string} key 存储键\n     * @returns {boolean} 是否存在\n     */\n    static has(key) {\n        try {\n            const info = this.getInfo();\n            return info.keys.includes(key);\n        } catch (error) {\n            console.error(`Storage has error for key ${key}:`, error);\n            return false;\n        }\n    }\n}\n\n// 预定义的存储键\nexport const STORAGE_KEYS = {\n    USER_INFO: 'userInfo',\n    COUPLE_INFO: 'coupleInfo',\n    CART_ITEMS: 'cartItems',\n    SENT_ORDERS: 'sentOrders',\n    RECEIVED_ORDERS: 'receivedOrders',\n    APP_SETTINGS: 'appSettings',\n    THEME_CONFIG: 'themeConfig',\n    MENU_DATA: 'menuData'\n};\n\n// 应用设置管理\nexport class AppSettings {\n    static get() {\n        return Storage.get(STORAGE_KEYS.APP_SETTINGS, {\n            theme: 'default',\n            language: 'zh-CN',\n            notifications: true,\n            soundEnabled: true,\n            vibrationEnabled: true,\n            autoSave: true\n        });\n    }\n\n    static set(settings) {\n        const currentSettings = this.get();\n        const newSettings = { ...currentSettings, ...settings };\n        return Storage.set(STORAGE_KEYS.APP_SETTINGS, newSettings);\n    }\n\n    static reset() {\n        return Storage.remove(STORAGE_KEYS.APP_SETTINGS);\n    }\n}\n\n// 用户数据管理\nexport class UserData {\n    static get() {\n        return Storage.get(STORAGE_KEYS.USER_INFO, {\n            id: null,\n            username: '用户',\n            avatar: '/static/images/default-avatar.png',\n            phone: '',\n            email: '',\n            createTime: new Date().toISOString()\n        });\n    }\n\n    static set(userInfo) {\n        return Storage.set(STORAGE_KEYS.USER_INFO, userInfo);\n    }\n\n    static clear() {\n        return Storage.remove(STORAGE_KEYS.USER_INFO);\n    }\n}\n\n// 情侣数据管理\nexport class CoupleData {\n    static get() {\n        return Storage.get(STORAGE_KEYS.COUPLE_INFO, {\n            partnerId: null,\n            partnerName: null,\n            partnerAvatar: null,\n            bindTime: null,\n            anniversary: null\n        });\n    }\n\n    static set(coupleInfo) {\n        return Storage.set(STORAGE_KEYS.COUPLE_INFO, coupleInfo);\n    }\n\n    static clear() {\n        return Storage.remove(STORAGE_KEYS.COUPLE_INFO);\n    }\n}\n\n// 主题配置管理\nexport class ThemeConfig {\n    static get() {\n        return Storage.get(STORAGE_KEYS.THEME_CONFIG, {\n            primaryColor: '#FF69B4',\n            secondaryColor: '#FF1493',\n            backgroundColor: '#f8f9fa',\n            cardColor: '#ffffff',\n            textColor: '#303133',\n            borderRadius: '20rpx',\n            fontFamily: 'default'\n        });\n    }\n\n    static set(themeConfig) {\n        return Storage.set(STORAGE_KEYS.THEME_CONFIG, themeConfig);\n    }\n\n    static reset() {\n        return Storage.remove(STORAGE_KEYS.THEME_CONFIG);\n    }\n}\n\nexport default Storage;\n"],"names":["uni"],"mappings":";;AAKA,MAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOV,OAAO,IAAI,KAAK,OAAO;AACnB,QAAI;AACA,YAAM,OAAO,KAAK,UAAU,KAAK;AACjCA,oBAAAA,MAAI,eAAe,KAAK,IAAI;AAC5B,aAAO;AAAA,IACV,SAAQ,OAAO;AACZA,0BAAA,MAAA,SAAA,0BAAc,6BAA6B,GAAG,KAAK,KAAK;AACxD,aAAO;AAAA,IACV;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,OAAO,IAAI,KAAK,eAAe,MAAM;AACjC,QAAI;AACA,YAAM,OAAOA,cAAAA,MAAI,eAAe,GAAG;AACnC,UAAI,MAAM;AACN,eAAO,KAAK,MAAM,IAAI;AAAA,MACzB;AACD,aAAO;AAAA,IACV,SAAQ,OAAO;AACZA,0BAAA,MAAA,SAAA,0BAAc,6BAA6B,GAAG,KAAK,KAAK;AACxD,aAAO;AAAA,IACV;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO,OAAO,KAAK;AACf,QAAI;AACAA,0BAAI,kBAAkB,GAAG;AACzB,aAAO;AAAA,IACV,SAAQ,OAAO;AACZA,0BAAc,MAAA,SAAA,0BAAA,gCAAgC,GAAG,KAAK,KAAK;AAC3D,aAAO;AAAA,IACV;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAO,QAAQ;AACX,QAAI;AACAA,oBAAG,MAAC,iBAAgB;AACpB,aAAO;AAAA,IACV,SAAQ,OAAO;AACZA,oBAAA,MAAA,MAAA,SAAA,0BAAc,wBAAwB,KAAK;AAC3C,aAAO;AAAA,IACV;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAO,UAAU;AACb,QAAI;AACA,aAAOA,cAAAA,MAAI;IACd,SAAQ,OAAO;AACZA,oBAAc,MAAA,MAAA,SAAA,0BAAA,0BAA0B,KAAK;AAC7C,aAAO,EAAE,MAAM,IAAI,aAAa,GAAG,WAAW;IACjD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO,IAAI,KAAK;AACZ,QAAI;AACA,YAAM,OAAO,KAAK;AAClB,aAAO,KAAK,KAAK,SAAS,GAAG;AAAA,IAChC,SAAQ,OAAO;AACZA,0BAAA,MAAA,SAAA,0BAAc,6BAA6B,GAAG,KAAK,KAAK;AACxD,aAAO;AAAA,IACV;AAAA,EACJ;AACL;AAGY,MAAC,eAAe;AAAA,EACxB,WAAW;AAAA,EACX,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,WAAW;AACf;;;"}