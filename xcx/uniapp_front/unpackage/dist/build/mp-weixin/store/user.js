"use strict";const e=require("../common/vendor.js"),r=require("../api/user.js"),t=require("./couple.js"),s=e.defineStore("user",{state:()=>({userInfo:null,token:null,refreshToken:null,registerStatus:"idle",registerError:null,_fetchingUser:!1}),getters:{isLoggedIn(){return!(!this.userInfo||!this.token)},userId(){return this.userInfo?this.userInfo.id:null},username(){return this.userInfo?this.userInfo.username:null},email(){return this.userInfo?this.userInfo.email:null}},actions:{setUserInfo(e){this.userInfo=e,this.saveUserToLocal()},saveUserToLocal(){this.userInfo&&e.index.setStorageSync("userInfo",this.userInfo)},setToken(r,t){this.token=r,this.refreshToken=t,e.index.setStorageSync("token",r),e.index.setStorageSync("refreshToken",t)},clearUserState(){this.userInfo=null,this.token=null,this.refreshToken=null,e.index.removeStorageSync("token"),e.index.removeStorageSync("refreshToken"),e.index.removeStorageSync("userInfo")},async login(e){try{const t=await r.login(e),{token:s,user:n}=t;return this.setToken(s.access,s.refresh),this.setUserInfo(n),this.fetchCurrentUser().catch((e=>{console.warn("Failed to fetch complete user info after login:",e)})),this.syncThemeAfterLogin(),!0}catch(t){throw this.clearUserState(),t}},async loginWithCode(e){try{const t=await r.verifyAndLogin(e),{token:s,user:n}=t;return this.setToken(s.access,s.refresh),this.setUserInfo(n),this.fetchCurrentUser().catch((e=>{console.warn("Failed to fetch complete user info after login:",e)})),this.syncThemeAfterLogin(),!0}catch(t){throw this.clearUserState(),t}},async sendVerificationCode(e){try{return await r.sendVerificationCode({email:e}),!0}catch(t){throw t}},async register(e){this.registerStatus="pending",this.registerError=null;try{const s=t.useCoupleStore(),n=await r.verifyAndLogin(e),{token:o,user:i}=n;return this.setToken(o.access,o.refresh),this.setUserInfo(i),s.setBindingInfo(i.binding),this.syncThemeAfterLogin(),this.registerStatus="success",!0}catch(s){throw this.registerStatus="error",this.registerError=s.message,s}},logout(){this.clearUserState()},async refreshUserToken(){if(!this.refreshToken)return!1;try{const e=await r.refreshToken(this.refreshToken),{access:t}=e;return this.setToken(t,this.refreshToken),!0}catch(e){return this.clearUserState(),!1}},async fetchCurrentUser(){if(!this.token)return console.log("No token available, skipping fetchCurrentUser"),!1;if(this._fetchingUser)return console.log("Already fetching user info, skipping duplicate request"),!1;this._fetchingUser=!0;try{const e=t.useCoupleStore();console.log("Fetching current user info...");const s=await r.getCurrentUser();console.log("Received user info:",s);const{binding:n,...o}=s;return this.setUserInfo(o),e.setBindingInfo(n),console.log("User info updated successfully"),!0}catch(e){return console.error("Failed to fetch current user:",e),e.response&&401===e.response.statusCode&&(console.log("Token expired, clearing user state"),this.clearUserState()),!1}finally{this._fetchingUser=!1}},initFromStorage(){const r=e.index.getStorageSync("token"),t=e.index.getStorageSync("refreshToken"),s=e.index.getStorageSync("userInfo");return!(!r||!t)&&(this.token=r,this.refreshToken=t,s&&(this.userInfo=s),!0)},syncThemeAfterLogin(){var r;try{e.index.$emit("userLoginSuccess",{userId:null==(r=this.userInfo)?void 0:r.id,timestamp:Date.now()}),console.log("已发送登录成功事件，主题将自动同步")}catch(t){console.error("同步主题配置失败:",t)}}}});exports.useUserStore=s;
