{"version":3,"file":"cart.js","sources":["store/cart.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport Storage, { STORAGE_KEYS } from '@/utils/storage';\r\n\r\nexport const useCartStore = defineStore('cart', {\r\n    state: () => ({\r\n        // 购物车商品，格式: { productId: { item, quantity } }\r\n        items: {},\r\n    }),\r\n\r\n    getters: {\r\n        // 购物车商品总数\r\n        totalItems: (state) => Object.values(state.items).reduce((total, { quantity }) => total + quantity, 0),\r\n\r\n        // 购物车总价\r\n        totalPrice: (state) => {\r\n            const price = Object.values(state.items)\r\n                .reduce((total, { item, quantity }) => total + item.price * quantity, 0);\r\n            return price.toFixed(2);\r\n        },\r\n\r\n        // 获取某个商品的数量\r\n        getItemQuantity(state) {\r\n            return function(productId) {\r\n                const item = state.items[productId];\r\n                return item ? item.quantity : 0;\r\n            }\r\n        },\r\n    },\r\n\r\n    actions: {\r\n        // 从本地存储加载购物车数据\r\n        loadCartFromLocal() {\r\n            const cartData = Storage.get(STORAGE_KEYS.CART_ITEMS, {});\r\n            this.items = cartData;\r\n        },\r\n\r\n        // 保存购物车数据到本地存储\r\n        saveCartToLocal() {\r\n            Storage.set(STORAGE_KEYS.CART_ITEMS, this.items);\r\n        },\r\n\r\n        // 添加商品到购物车\r\n        addItem(product) {\r\n            console.log('CartStore addItem - 商品数据:', product);\r\n            if (!product || !product.id) {\r\n                console.error('商品数据无效:', product);\r\n                return;\r\n            }\r\n\r\n            if (this.items[product.id]) {\r\n                this.items[product.id].quantity++;\r\n                console.log('增加商品数量:', this.items[product.id]);\r\n            } else {\r\n                this.items[product.id] = { item: product, quantity: 1 };\r\n                console.log('新增商品到购物车:', this.items[product.id]);\r\n            }\r\n            this.saveCartToLocal();\r\n        },\r\n\r\n        // 从购物车移除商品\r\n        removeItem(productId) {\r\n            if (this.items[productId] && this.items[productId].quantity > 1) {\r\n                this.items[productId].quantity--;\r\n            } else if (this.items[productId]) {\r\n                delete this.items[productId];\r\n            }\r\n            this.saveCartToLocal();\r\n        },\r\n\r\n        // 直接设置商品数量\r\n        setItemQuantity(product, quantity) {\r\n            console.log('CartStore setItemQuantity - 商品数据:', product, '数量:', quantity);\r\n            if (!product || !product.id) {\r\n                console.error('商品数据无效:', product);\r\n                return;\r\n            }\r\n\r\n            if (quantity > 0) {\r\n                this.items[product.id] = { item: product, quantity: quantity };\r\n                console.log('设置商品数量:', this.items[product.id]);\r\n            } else {\r\n                delete this.items[product.id];\r\n                console.log('删除商品:', product.id);\r\n            }\r\n            this.saveCartToLocal();\r\n        },\r\n\r\n        // 清空购物车\r\n        clearCart() {\r\n            this.items = {};\r\n            this.saveCartToLocal();\r\n        },\r\n\r\n        // 初始化购物车\r\n        initCart() {\r\n            this.loadCartFromLocal();\r\n        }\r\n    },\r\n});"],"names":["defineStore","Storage","STORAGE_KEYS","uni"],"mappings":";;;AAGY,MAAC,eAAeA,cAAW,YAAC,QAAQ;AAAA,EAC5C,OAAO,OAAO;AAAA;AAAA,IAEV,OAAO,CAAE;AAAA,EACjB;AAAA,EAEI,SAAS;AAAA;AAAA,IAEL,YAAY,CAAC,UAAU,OAAO,OAAO,MAAM,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,SAAQ,MAAO,QAAQ,UAAU,CAAC;AAAA;AAAA,IAGrG,YAAY,CAAC,UAAU;AACnB,YAAM,QAAQ,OAAO,OAAO,MAAM,KAAK,EAClC,OAAO,CAAC,OAAO,EAAE,MAAM,SAAQ,MAAO,QAAQ,KAAK,QAAQ,UAAU,CAAC;AAC3E,aAAO,MAAM,QAAQ,CAAC;AAAA,IACzB;AAAA;AAAA,IAGD,gBAAgB,OAAO;AACnB,aAAO,SAAS,WAAW;AACvB,cAAM,OAAO,MAAM,MAAM,SAAS;AAClC,eAAO,OAAO,KAAK,WAAW;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AAAA,EAED,SAAS;AAAA;AAAA,IAEL,oBAAoB;AAChB,YAAM,WAAWC,cAAAA,QAAQ,IAAIC,cAAAA,aAAa,YAAY,CAAA,CAAE;AACxD,WAAK,QAAQ;AAAA,IAChB;AAAA;AAAA,IAGD,kBAAkB;AACdD,oBAAO,QAAC,IAAIC,cAAY,aAAC,YAAY,KAAK,KAAK;AAAA,IAClD;AAAA;AAAA,IAGD,QAAQ,SAAS;AACbC,8DAAY,6BAA6B,OAAO;AAChD,UAAI,CAAC,WAAW,CAAC,QAAQ,IAAI;AACzBA,kEAAc,WAAW,OAAO;AAChC;AAAA,MACH;AAED,UAAI,KAAK,MAAM,QAAQ,EAAE,GAAG;AACxB,aAAK,MAAM,QAAQ,EAAE,EAAE;AACvBA,4BAAA,MAAA,OAAA,uBAAY,WAAW,KAAK,MAAM,QAAQ,EAAE,CAAC;AAAA,MAC7D,OAAmB;AACH,aAAK,MAAM,QAAQ,EAAE,IAAI,EAAE,MAAM,SAAS,UAAU;AACpDA,4BAAY,MAAA,OAAA,uBAAA,aAAa,KAAK,MAAM,QAAQ,EAAE,CAAC;AAAA,MAClD;AACD,WAAK,gBAAe;AAAA,IACvB;AAAA;AAAA,IAGD,WAAW,WAAW;AAClB,UAAI,KAAK,MAAM,SAAS,KAAK,KAAK,MAAM,SAAS,EAAE,WAAW,GAAG;AAC7D,aAAK,MAAM,SAAS,EAAE;AAAA,MACzB,WAAU,KAAK,MAAM,SAAS,GAAG;AAC9B,eAAO,KAAK,MAAM,SAAS;AAAA,MAC9B;AACD,WAAK,gBAAe;AAAA,IACvB;AAAA;AAAA,IAGD,gBAAgB,SAAS,UAAU;AAC/BA,0BAAA,MAAA,OAAA,uBAAY,qCAAqC,SAAS,OAAO,QAAQ;AACzE,UAAI,CAAC,WAAW,CAAC,QAAQ,IAAI;AACzBA,kEAAc,WAAW,OAAO;AAChC;AAAA,MACH;AAED,UAAI,WAAW,GAAG;AACd,aAAK,MAAM,QAAQ,EAAE,IAAI,EAAE,MAAM,SAAS;AAC1CA,4BAAA,MAAA,OAAA,uBAAY,WAAW,KAAK,MAAM,QAAQ,EAAE,CAAC;AAAA,MAC7D,OAAmB;AACH,eAAO,KAAK,MAAM,QAAQ,EAAE;AAC5BA,gEAAY,SAAS,QAAQ,EAAE;AAAA,MAClC;AACD,WAAK,gBAAe;AAAA,IACvB;AAAA;AAAA,IAGD,YAAY;AACR,WAAK,QAAQ;AACb,WAAK,gBAAe;AAAA,IACvB;AAAA;AAAA,IAGD,WAAW;AACP,WAAK,kBAAiB;AAAA,IACzB;AAAA,EACJ;AACL,CAAC;;"}