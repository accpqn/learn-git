{"version":3,"file":"user.js","sources":["api/user.js"],"sourcesContent":["import request from './request';\r\n\r\n// 场景二：老用户使用密码登录\r\nexport function login(data) {\r\n    return request({\r\n        url: '/users/login/',\r\n        method: 'POST',\r\n        data\r\n    });\r\n}\r\n\r\n// 场景一 & 三：注册或验证码登录\r\nexport function verifyAndLogin(data) {\r\n    return request({\r\n        url: '/users/verify-and-login/',\r\n        method: 'POST',\r\n        data\r\n    });\r\n}\r\n\r\n// 场景一 & 三：发送验证码\r\nexport function sendVerificationCode(data) {\r\n    return request({\r\n        url: '/users/send-code/',\r\n        method: 'POST',\r\n        data\r\n    });\r\n}\r\n\r\n// 刷新Token\r\nexport function refreshToken(refreshToken) {\r\n    return request({\r\n        url: '/token/refresh/',\r\n        method: 'POST',\r\n        data: { refresh: refreshToken }\r\n    });\r\n}\r\n\r\n// 获取当前用户信息\r\nexport function getCurrentUser() {\r\n    return request({\r\n        url: '/users/me/',\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n// 发送绑定请求\r\nexport function sendBindingRequest(email) {\r\n    return request({\r\n        url: '/users/send-binding-request/',\r\n        method: 'POST',\r\n        data: { email }\r\n    });\r\n}\r\n\r\n// 获取待处理的绑定请求\r\nexport function getPendingBindings() {\r\n    return request({\r\n        url: '/users/pending-bindings/',\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n// 响应绑定请求\r\nexport function respondToBinding(bindingId, action) {\r\n    return request({\r\n        url: `/users/${bindingId}/respond-binding/`,\r\n        method: 'POST',\r\n        data: { action }\r\n    });\r\n}\r\n\r\n// 解除绑定\r\nexport function unbind(bindingId) {\r\n    return request({\r\n        url: `/users/${bindingId}/unbind/`,\r\n        method: 'POST'\r\n    });\r\n}\r\n\r\n// 更新用户个人信息\r\nexport function updateUserProfile(data) {\r\n    return request({\r\n        url: '/users/update-profile/',\r\n        method: 'PUT',\r\n        data\r\n    });\r\n}\r\n\r\n// 上传用户头像\r\nexport function uploadAvatar(filePath) {\r\n    return new Promise((resolve, reject) => {\r\n        const token = uni.getStorageSync('token');\r\n\r\n        uni.uploadFile({\r\n            url: `${import.meta.env.VITE_API_BASE_URL || 'http://127.0.0.1:8000'}/api/users/upload-avatar/`,\r\n            filePath: filePath,\r\n            name: 'avatar',\r\n            header: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            success: (res) => {\r\n                console.log('头像上传响应:', res);\r\n                if (res.statusCode === 200) {\r\n                    try {\r\n                        const data = JSON.parse(res.data);\r\n                        resolve(data);\r\n                    } catch (e) {\r\n                        reject(new Error('响应数据解析失败'));\r\n                    }\r\n                } else {\r\n                    reject(new Error(`上传失败: ${res.statusCode}`));\r\n                }\r\n            },\r\n            fail: (error) => {\r\n                console.error('头像上传失败:', error);\r\n                reject(error);\r\n            }\r\n        });\r\n    });\r\n}"],"names":["request","refreshToken","uni"],"mappings":";;;;;AAGO,SAAS,MAAM,MAAM;AACxB,SAAOA,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EAAA,CACH;AACL;AAGO,SAAS,eAAe,MAAM;AACjC,SAAOA,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EAAA,CACH;AACL;AAGO,SAAS,qBAAqB,MAAM;AACvC,SAAOA,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EAAA,CACH;AACL;AAGO,SAAS,aAAaC,eAAc;AACvC,SAAOD,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,MAAM,EAAE,SAASC,cAAa;AAAA,EAAA,CACjC;AACL;AAGO,SAAS,iBAAiB;AAC7B,SAAOD,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,EAAA,CACX;AACL;AAGO,SAAS,mBAAmB,OAAO;AACtC,SAAOA,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,MAAM,EAAE,MAAM;AAAA,EAAA,CACjB;AACL;AAWgB,SAAA,iBAAiB,WAAW,QAAQ;AAChD,SAAOA,oBAAQ;AAAA,IACX,KAAK,UAAU,SAAS;AAAA,IACxB,QAAQ;AAAA,IACR,MAAM,EAAE,OAAO;AAAA,EAAA,CAClB;AACL;AAGO,SAAS,OAAO,WAAW;AAC9B,SAAOA,oBAAQ;AAAA,IACX,KAAK,UAAU,SAAS;AAAA,IACxB,QAAQ;AAAA,EAAA,CACX;AACL;AAGO,SAAS,kBAAkB,MAAM;AACpC,SAAOA,oBAAQ;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EAAA,CACH;AACL;AAGO,SAAS,aAAa,UAAU;AACnC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC9B,UAAA,QAAQE,cAAAA,MAAI,eAAe,OAAO;AAExCA,kBAAAA,MAAI,WAAW;AAAA,MACX,KAAK,GAAG,+BAAgB,qBAAqB,uBAAuB;AAAA,MACpE;AAAA,MACA,MAAM;AAAA,MACN,QAAQ;AAAA,QACJ,iBAAiB,UAAU,KAAK;AAAA,MACpC;AAAA,MACA,SAAS,CAAC,QAAQ;AACdA,sBAAA,MAAA,MAAA,OAAA,sBAAY,WAAW,GAAG;AACtB,YAAA,IAAI,eAAe,KAAK;AACpB,cAAA;AACA,kBAAM,OAAO,KAAK,MAAM,IAAI,IAAI;AAChC,oBAAQ,IAAI;AAAA,mBACP,GAAG;AACD,mBAAA,IAAI,MAAM,UAAU,CAAC;AAAA,UAChC;AAAA,QAAA,OACG;AACH,iBAAO,IAAI,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;AAAA,QAC/C;AAAA,MACJ;AAAA,MACA,MAAM,CAAC,UAAU;AACbA,sBAAA,MAAc,MAAA,SAAA,sBAAA,WAAW,KAAK;AAC9B,eAAO,KAAK;AAAA,MAChB;AAAA,IAAA,CACH;AAAA,EAAA,CACJ;AACL;;;;;;;;;;;"}